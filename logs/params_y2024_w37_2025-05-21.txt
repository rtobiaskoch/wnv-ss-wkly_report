[1] "1_input/config_params.RDS Log"
$all_zones
[1] "NE" "SE" "NW" "SW" "LV" "BC" "BE"

$args
$args$threshold
[1] 500

$args$week
[1] 37

$args$year
[1] 2024


$col_class_database
     csu_id     trap_id        year        week   trap_date      county 
"character" "character"   "numeric"   "numeric" "character" "character" 
     method       genus         spp         sex   no_gravid  no_deplete 
"character" "character" "character"   "logical"   "numeric"   "numeric" 
      total   test_code         seq          cq        zone         lat 
  "numeric"   "numeric"   "numeric"   "numeric" "character"   "numeric" 
       long 
  "numeric" 

$col_database
 [1] "csu_id"     "trap_id"    "zone"       "year"       "week"      
 [6] "trap_date"  "county"     "method"     "spp"        "total"     
[11] "test_code"  "cq"         "copies_WNV" "seq"        "cq"        
[16] "lat"        "long"      

$col_datasheet
 [1] "csu_id"     "trap_id"    "year"       "week"       "trap_date" 
 [6] "county"     "method"     "genus"      "spp"        "sex"       
[11] "no_gravid"  "no_deplete" "total"      "test_code"  "seq"       
[16] "cq"         "zone"       "lat"        "long"      

$col_input_database
 [1] "csu_id"    "trap_id"   "year"      "week"      "trap_date" "county"   
 [7] "method"    "spp"       "total"     "test_code" "zone"     

$col_pcr_check
[1] "csu_id"       "test_code"    "ct_threshold" "plate"        "copies_SLEV" 
[6] "copies_WNV"   "cq_SLEV"      "cq"          

$col_rename_datasheet
                           csu_id                           trap_id 
   "CSU Pool Number (CMC Enters)" "Collection Site       (Trap ID)" 
                             year                              week 
                           "Year"                            "Week" 
                        trap_date                            county 
                      "Trap Date"                          "County" 
                           method                             genus 
                            "L/G"                           "Genus" 
                              spp                               sex 
                        "Species"                             "Sex" 
                        no_gravid                        no_deplete 
                     "No. Gravid"                     "No. Deplete" 
                            total                         test_code 
                          "Total"          "Test Code (CSU Enters)" 
                             zone 
                           "Zone" 

$col_trap
[1] "zone" "lat"  "long"

$color_palette

$config_params_file
[1] "1_input/config_params.RDS"

$copy_threshold
[1] 500

$curr_hx_pal
  current        hx 
"#e9724c"  "grey50" 

$dir_datasheet
[1] "1_input/datasheet"

$dir_input
[1] "1_input"

$dir_mid
[1] "2_mid"

$dir_name
[1] "scripts"

$dir_output
[1] "3_output"

$dir_path
[1] "0_R"

$dir_pcr
[1] "1_input/pcr"

$dir_platemap
[1] "1_input/platemap"

$dir_scripts
[1] "0_R"

$directories
$directories$input
[1] "1_input"

$directories$datasheet
[1] "1_input/datasheet"

$directories$pcr
[1] "1_input/pcr"

$directories$platemap
[1] "1_input/platemap"

$directories$scripts
[1] "0_R"

$directories$mid
[1] "2_mid"

$directories$output
[1] "3_output"


$empty_dirs
NULL

$fc_zones
[1] "NE" "SE" "NW" "SW"

$fn_abund_out
[1] "2_mid/y2024_w37_abundance"

$fn_cq_out
[1] "2_mid/y2024_w37_platemap.csv"

$fn_data_output
[1] "3_output/y2024_w37_data_update.csv"

$fn_database_update
[1] "2_mid/wnv-s_database_update.csv"

$fn_datasheet_clean
[1] "2_mid/y2024_w37_datasheet.csv"

$fn_datasheet_clean_test
[1] "2_mid/y2024_w37_datasheet_test.csv"

$fn_func_trap
[1] "2_mid/functional_traps.csv"

$fn_gdrive_archive
[1] "wnv-s_database_pre_y2024_w37.gsheet"

$fn_gdrive_database
[1] "1_input/wnv-s_database - data.csv"

$fn_gsheet_pull
[1] "0_R/gsheet_pull.R"

$fn_inactive_trap
[1] "2_mid/inactive_traps.csv"

$fn_max_trap_yr
[1] "2_mid/max_trap_zone_yr.csv"

$fn_non_database_sample
[1] "3_output/non_database_samples(std-ctrl-bird-etc).csv"

$fn_pools_mid
[1] "2_mid/y2024_w37_pools.csv"

$fn_stds_ctrl_slev_bird
[1] "3_output/std_ctrl_slev_bird.csv"

$fn_trap
[1] "1_input/foco_trap - data.csv"

$fn_trap_malfunction
[1] "1_input/trap_malfunction - data.csv"

$fn_trap_p_wk
[1] "2_mid/trap_p_wk.csv"

$fn_week
[1] 37

$fn_weekly_input_format
[1] "3_output/weekly_data_input_format.csv"

$fn_weekly_input_format_mid
[1] "2_mid/weekly_data_input_format_mid.RData"

$fn_year
[1] 2024

$grp_vars
[1] "year" "week" "zone" "spp" 

$gsheet_pull
function (key, sheet, out_fn, update = T) 
{
    require(googlesheets4)
    library(googlesheets4)
    if (update == T) {
        googlesheets4::gs4_auth()
        mdata = read_sheet(key, sheet = sheet)
        mdata <- mdata %>% mutate(across(where(is.list), ~sapply(., 
            paste, collapse = ", ")))
        write.csv(mdata, out_fn, row.names = F, na = "")
        read.csv(out_fn)
    }
    else {
        if (file.exists(out_fn)) {
            read.csv(out_fn)
        }
        else {
            print(paste(out_fn, "file doesn't exist, please set update = T or download desired gsheet file"))
        }
    }
}

$hx_grp_vars
[1] "week" "zone"

$input_subdirs
$input_subdirs$datasheet
[1] "1_input/datasheet"

$input_subdirs$pcr
[1] "1_input/pcr"

$input_subdirs$platemap
[1] "1_input/platemap"

$input_subdirs$scripts
[1] "0_R"


$key_database_gsheet
[1] "12Mf-w9I9NHTTDjzEPRoxUE08ka4WZ6RE-RM1s-FW7qA"

$key_foco_trap
[1] "1Jna3Bu47gjBWWz5vCoel4ksa-LBuo8R3zVfQYFl73wI"

$key_standards_gsheet
[1] "1bSMYQ4bZ9uBfrOQ6ylsegNmmGYdf9YFVbxB4qBhnFQo"

$key_trap_gsheet
[1] "1Jna3Bu47gjBWWz5vCoel4ksa-LBuo8R3zVfQYFl73wI"

$key_trap_malfunction
[1] "1dsTyvZoCN6NUJlTcDLINMfxuGZdJuP2ADpn8noQwL6Q"

$missing_dirs
NULL

$non_fc_zones
[1] "LV" "BC" "BE"

$non_routine_zones
[1] "BC"

$pal_mozzy
     hx_Tarsalis       hx_Pipiens current_Tarsalis  current_Pipiens 
        "grey50"         "grey30"        "#e9724c"        "#820263" 

$pal_mozzy2
  Pipiens  Tarsalis       All 
"#820263" "#e9724c" "#faa916" 

$pal_mozzy3
[1] "#ffc857" "#e9724c" "#c5283d"

$parser
<Parser>
  Public:
    add_argument: function (...) 
    add_argument_group: function (...) 
    add_mutually_exclusive_group: function (required = FALSE) 
    add_subparsers: function (...) 
    clone: function (deep = FALSE) 
    format_help: function () 
    format_usage: function () 
    get_default: function (...) 
    initialize: function (python_code, name) 
    parse_args: function (args = commandArgs(TRUE)) 
    parse_intermixed_args: function (args = commandArgs(TRUE)) 
    parse_known_args: function (args = commandArgs(TRUE)) 
    parse_known_intermixed_args: function (args = commandArgs(TRUE)) 
    print_help: function () 
    print_usage: function () 
    set_defaults: function (...) 
  Private:
    n_groups: 0
    n_mutually_exclusive_groups: 0
    name: parser
    python_code: Code, R6

$rn_threshold
[1] 34000

$vi_threshold
[1] 0.75

$week_filter
[1] 37

$week_filter_hx
 [1] 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37

$week_filter_yr
 [1] 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37

$year_filter
[1] 2024

$year_filter_hx
 [1] 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023

$zone_lvls
[1] "NW" "NE" "SE" "SW" "FC" "LV" "BE" "BC"

